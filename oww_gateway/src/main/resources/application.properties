# ========================================
# Gateway 기본 설정
# ========================================
server.port=8201
spring.application.name=gateway-service

# ========================================
# Eureka 설정
# ========================================
eureka.client.service-url.defaultZone=http://localhost:8200/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false

eureka.instance.home-page-url=http://localhost:8201/
eureka.instance.status-page-url=http://localhost:8201/actuator/info
eureka.instance.health-check-url=http://localhost:8201/actuator/health

# Discovery Locator
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ========================================
# Spring Cloud Gateway 라우팅 설정
# ========================================

# 0. Gateway 자체 index.html + 정적 리소스 (favicon, css, js 등)
spring.cloud.gateway.routes[0].id=gateway-static
spring.cloud.gateway.routes[0].uri=forward:/
spring.cloud.gateway.routes[0].predicates[0]=Path=/,/index.html,/css/**,/js/**,/img/**,/favicon.ico
spring.cloud.gateway.routes[0].order=0

# 1. OAuth2 인증 시작 (Gateway -> Login Service)
spring.cloud.gateway.routes[1].id=oauth2-login
spring.cloud.gateway.routes[1].uri=lb://login-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/oauth2/authorization/**
spring.cloud.gateway.routes[1].order=1

# 2. OAuth2 콜백
spring.cloud.gateway.routes[2].id=oauth2-callback
spring.cloud.gateway.routes[2].uri=lb://login-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/login/oauth2/**
spring.cloud.gateway.routes[2].order=1

# 3. OAuth2 성공/실패
spring.cloud.gateway.routes[3].id=oauth2-result
spring.cloud.gateway.routes[3].uri=lb://login-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/oauth2/success,/oauth2/failure
spring.cloud.gateway.routes[3].order=1

# 4. Banking Service 메인 페이지
spring.cloud.gateway.routes[4].id=banking-main
spring.cloud.gateway.routes[4].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/banking/main,/banking/dashboard,/banking/home
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[4].order=2

# 5. Banking Service API (JWT 필요)
spring.cloud.gateway.routes[5].id=banking-api
spring.cloud.gateway.routes[5].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/banking/api/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1, JwtAuth
spring.cloud.gateway.routes[5].order=3

# 6. Banking Service 페이지 (JWT 필요)
spring.cloud.gateway.routes[6].id=banking-pages
spring.cloud.gateway.routes[6].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/banking/**,/account/**,/createAccount/**,/transfer/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1, JwtAuth
spring.cloud.gateway.routes[6].order=3

# 7. MyPage Service (JWT 필요)
spring.cloud.gateway.routes[7].id=mypage-service
spring.cloud.gateway.routes[7].uri=lb://MYPAGE-SERVICE
spring.cloud.gateway.routes[7].predicates[0]=Path=/mypage/**
spring.cloud.gateway.routes[7].filters[0]=StripPrefix=1, JwtAuth
spring.cloud.gateway.routes[7].order=3

# 8. Loan Service 페이지 (JWT 필요)
spring.cloud.gateway.routes[8].id=loan-service
spring.cloud.gateway.routes[8].uri=lb://LOAN-SERVICE
spring.cloud.gateway.routes[8].predicates[0]=Path=/loan/**
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=1, JwtAuth
spring.cloud.gateway.routes[8].order=3

# Loan Service 정적 리소스 (JWT 불필요)
spring.cloud.gateway.routes[9].id=loan-static
spring.cloud.gateway.routes[9].uri=lb://LOAN-SERVICE
spring.cloud.gateway.routes[9].predicates[0]=Path=/loan/css/**,/loan/js/**,/loan/img/**
spring.cloud.gateway.routes[9].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[9].order=0

# Loan Service 페이지 (JWT 필요)
spring.cloud.gateway.routes[10].id=loan-service
spring.cloud.gateway.routes[10].uri=lb://LOAN-SERVICE
spring.cloud.gateway.routes[10].predicates[0]=Path=/loan/**
spring.cloud.gateway.routes[10].filters[0]=StripPrefix=1, JwtAuth
spring.cloud.gateway.routes[10].order=3


# ========================================
# JWT 설정
# ========================================
jwt.secret=myBankingSecretKey123456789012345678901234567890
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# ========================================
# CORS 설정
# ========================================
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:8201,http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

# ========================================
# 호스트명 및 포트 강제 설정
# ========================================
server.forward-headers-strategy=framework
spring.cloud.gateway.x-forwarded.enabled=true
spring.cloud.gateway.x-forwarded.for-enabled=true
spring.cloud.gateway.x-forwarded.host-enabled=true
spring.cloud.gateway.x-forwarded.port-enabled=true
spring.cloud.gateway.x-forwarded.proto-enabled=true

# ========================================
# 디버깅 로그
# ========================================
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG

# Actuator
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.health.show-details=always
