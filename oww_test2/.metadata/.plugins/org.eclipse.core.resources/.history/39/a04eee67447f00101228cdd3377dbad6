<!DOCTYPE html>
<html lang="ko" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>이체 내역 조회</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            gap: 20px;
        }

        .left-panel {
            flex: 1;
            background: white;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 20px;
        }

        .right-panel {
            flex: 1;
            background: white;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 20px;
        }

        .account-info {
            background: #e8e8e8;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            text-align: center;
        }

        .account-number {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        .balance {
            font-size: 24px;
            font-weight: bold;
            color: #0066cc;
            margin-top: 5px;
        }

        .search-section {
            margin-bottom: 20px;
        }

        .search-row {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            gap: 10px;
        }

        .search-label {
            min-width: 80px;
            font-weight: bold;
        }

        .date-input {
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        .search-btn {
            background: #666;
            color: white;
            border: none;
            padding: 8px 20px;
            border-radius: 3px;
            cursor: pointer;
        }

        .search-btn:hover {
            background: #555;
        }

        .history-table {
            width: 100%;
            border-collapse: collapse;
            border: 1px solid #ccc;
        }

        .history-table th,
        .history-table td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: center;
            font-size: 12px;
        }

        .history-table th {
            background: #f0f0f0;
            font-weight: bold;
        }

        .history-table tbody tr {
            cursor: pointer;
        }

        .history-table tbody tr:hover {
            background-color: #f0f8ff;
        }

        .history-table tbody tr.selected {
            background-color: #e6f3ff;
        }

        .transfer-out, .safe-deposit, .safe-withdraw, .regular-payment {
            color: #ff4444;
        }

        .transfer-in {
            color: #0066cc;
        }

        .detail-panel {
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .detail-header {
            background: #f0f0f0;
            padding: 10px;
            font-weight: bold;
            border-bottom: 1px solid #ccc;
        }

        .detail-content {
            padding: 20px;
        }

        .detail-row {
            display: flex;
            margin-bottom: 15px;
            align-items: center;
        }

        .detail-label {
            min-width: 120px;
            font-weight: bold;
        }

        .detail-value {
            flex: 1;
        }

        .amount-large {
            font-size: 18px;
            font-weight: bold;
            color: #0066cc;
        }

        .amount-red {
            font-size: 18px;
            font-weight: bold;
            color: #ff4444;
        }

        .red-arrow {
            color: red;
            font-size: 20px;
            margin: 0 10px;
            align-self: center;
        }

        .no-data {
            text-align: center;
            padding: 20px;
            color: #666;
        }

        .loading {
            text-align: center;
            padding: 20px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- 왼쪽 패널 -->
        <div class="left-panel">
            <div class="account-info">
                <div class="account-number" th:text="${account?.accountNumber ?: '계좌 없음'}">1001-2025-000021</div>
                <div class="balance" th:text="${#numbers.formatInteger(account?.balance ?: 0, 3, 'COMMA')} + '원'">65,680,000원</div>
            </div>

            <div class="search-section">
                <div class="search-row">
                    <span class="search-label">조회기간</span>
                    <input type="date" class="date-input" id="startDate" value="2025-07-01">
                    <span>~</span>
                    <input type="date" class="date-input" id="endDate" value="2025-08-22">
                    <button class="search-btn" onclick="loadTransferHistory()">조회</button>
                </div>
            </div>

            <div id="loadingDiv" class="loading" style="display: none;">
                데이터를 불러오는 중...
            </div>

            <table class="history-table" id="historyTable">
                <thead>
                    <tr>
                        <th>거래일자</th>
                        <th>거래구분</th>
                        <th>거래금액</th>
                        <th>메모</th>
                    </tr>
                </thead>
                <tbody id="historyTableBody">
                    <tr th:each="item, stat : ${history}" th:onclick="'showDetail(' + ${stat.index} + ')'"
                        th:data-tx-id="${item.txId}"
                        th:data-tx-type="${item.txType}"
                        th:data-amount="${item.amount}"
                        th:data-memo="${item.memo}"
                        th:data-tx-date="${item.txDate}">
                        <td th:text="${#temporals.format(item.txDate, 'MM/dd')}">08/22</td>
                        <td th:text="${item.txType == 'TRANSFER_OUT' ? '출금' : 
                                      item.txType == 'TRANSFER_IN' ? '입금' : 
                                      item.txType == 'SAFE_DEPOSIT' ? '세이프입금' :
                                      item.txType == 'SAFE_WITHDRAW' ? '세이프출금' : '정기납부'}"
                            th:class="${item.txType == 'TRANSFER_IN' ? 'transfer-in' : 'transfer-out'}">출금</td>
                        <td th:text="${#numbers.formatInteger(item.amount, 3, 'COMMA')}"
                            th:class="${item.txType == 'TRANSFER_IN' ? 'transfer-in' : 'transfer-out'}">45,000</td>
                        <td th:text="${item.memo}">식비</td>
                    </tr>
                </tbody>
            </table>

            <div id="noDataDiv" class="no-data" style="display: none;">
                조회된 거래 내역이 없습니다.
            </div>
        </div>

        <span class="red-arrow">→</span>

        <!-- 오른쪽 패널 -->
        <div class="right-panel">
            <div class="detail-panel">
                <div class="detail-header">명세표 - 내역 조회</div>
                <div class="detail-content" id="detailContent">
                    <div class="detail-row">
                        <span class="detail-label">거래 번호</span>
                        <span class="detail-value" id="detail-tx-id">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">성격</span>
                        <span class="detail-value" id="detail-type">거래를 선택해주세요</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">거래 일시</span>
                        <span class="detail-value" id="detail-date">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">적요 및 통장 내용</span>
                        <span class="detail-value" id="detail-memo">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">취급점</span>
                        <span class="detail-value">OWW 인터넷뱅킹</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">거래 금액</span>
                        <span class="detail-value" id="detail-amount">-</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentHistoryData = [];
        
        // 페이지 로드 시 초기 데이터 설정
        document.addEventListener('DOMContentLoaded', function() {
            // Thymeleaf에서 전달된 데이터를 JavaScript 배열로 변환
            const historyElements = document.querySelectorAll('#historyTableBody tr[data-tx-id]');
            currentHistoryData = Array.from(historyElements).map(row => ({
                txId: row.dataset.txId,
                txType: row.dataset.txType,
                amount: parseInt(row.dataset.amount),
                memo: row.dataset.memo,
                txDate: row.dataset.txDate
            }));
            
            // 첫 번째 항목이 있으면 선택
            if (historyElements.length > 0) {
                showDetail(0);
            }
        });

        function showDetail(index) {
            const rows = document.querySelectorAll('#historyTableBody tr');
            
            // 모든 행의 선택 상태 제거
            rows.forEach(row => row.classList.remove('selected'));
            
            // 선택된 행 하이라이트
            if (rows[index]) {
                rows[index].classList.add('selected');
                
                const data = currentHistoryData[index];
                if (data) {
                    updateDetailPanel(data);
                }
            }
        }

        function updateDetailPanel(data) {
            const typeMap = {
                'TRANSFER_OUT': '일반 이체(기타 출금)',
                'TRANSFER_IN': '일반 이체(기타 입금)',
                'SAFE_DEPOSIT': '세이프박스 입금',
                'SAFE_WITHDRAW': '세이프박스 출금',
                'REGULAR_PAYMENT': '정기 납부'
            };

            // 날짜 포맷팅
            const date = new Date(data.txDate);
            const formattedDate = `${date.getFullYear()}년 ${String(date.getMonth() + 1).padStart(2, '0')}월 ${String(date.getDate()).padStart(2, '0')}일 ${date.getHours() < 12 ? '오전' : '오후'} ${String(date.getHours() % 12 || 12).padStart(2, '0')}시 ${String(date.getMinutes()).padStart(2, '0')}분`;

            // 금액 포맷팅 및 색상
            const formattedAmount = data.amount.toLocaleString() + '원';
            const amountClass = data.txType === 'TRANSFER_IN' ? 'amount-large' : 'amount-red';

            document.getElementById('detail-tx-id').textContent = data.txId;
            document.getElementById('detail-type').textContent = typeMap[data.txType] || data.txType;
            document.getElementById('detail-date').textContent = formattedDate;
            document.getElementById('detail-memo').textContent = data.memo || '-';
            
            const amountElement = document.getElementById('detail-amount');
            amountElement.textContent = formattedAmount;
            amountElement.className = `detail-value ${amountClass}`;
        }

        function loadTransferHistory() {
            const loadingDiv = document.getElementById('loadingDiv');
            const historyTable = document.getElementById('historyTable');
            const noDataDiv = document.getElementById('noDataDiv');
            
            loadingDiv.style.display = 'block';
            historyTable.style.display = 'none';
            noDataDiv.style.display = 'none';

            fetch('/banking/history-data')
                .then(response => response.json())
                .then(data => {
                    loadingDiv.style.display = 'none';
                    
                    if (data.success && data.history && data.history.length > 0) {
                        updateHistoryTable(data.history);
                        historyTable.style.display = 'table';
                    } else {
                        noDataDiv.style.display = 'block';
                    }
                })
                .catch(error => {
                    loadingDiv.style.display = 'none';
                    noDataDiv.style.display = 'block';
                    console.error('Error:', error);
                });
        }

        function updateHistoryTable(history) {
            const tbody = document.getElementById('historyTableBody');
            currentHistoryData = history;
            
            tbody.innerHTML = '';
            
            history.forEach((item, index) => {
                const row = document.createElement('tr');
                row.onclick = () => showDetail(index);
                row.style.cursor = 'pointer';
                
                const date = new Date(item.txDate);
                const formattedDate = `${String(date.getMonth() + 1).padStart(2, '0')}/${String(date.getDate()).padStart(2, '0')}`;
                
                const typeText = {
                    'TRANSFER_OUT': '출금',
                    'TRANSFER_IN': '입금',
                    'SAFE_DEPOSIT': '세이프입금',
                    'SAFE_WITHDRAW': '세이프출금',
                    'REGULAR_PAYMENT': '정기납부'
                };
                
                const typeClass = item.txType === 'TRANSFER_IN' ? 'transfer-in' : 'transfer-out';
                
                row.innerHTML = `
                    <td>${formattedDate}</td>
                    <td class="${typeClass}">${typeText[item.txType] || item.txType}</td>
                    <td class="${typeClass}">${item.amount.toLocaleString()}</td>
                    <td>${item.memo || '-'}</td>
                `;
                
                tbody.appendChild(row);
            });
            
            // 첫 번째 항목 자동 선택
            if (history.length > 0) {
                showDetail(0);
            }
        }
    </script>
</body>
</html>