<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>계좌 개설</title>
    <link rel="stylesheet" href="/css/page.css" />
    <link rel="stylesheet" href="/css/design.css" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://cdn.jsdelivr.net/npm/tsparticles@2.12.0/tsparticles.bundle.min.js"></script>
    <style>
        /* 전체 배경 설정 */
        html {
            background: linear-gradient(135deg, #f8d7da 0%, #e1bee7 50%, #c8a2c8 100%);
            min-height: 100vh;
        }
        
        body {
            display: block !important;
            justify-content: initial !important;
            align-items: initial !important;
            background: transparent;
            min-height: 100vh;
            font-family: Arial, sans-serif;
            color: #6b4c6b;
            margin: 0;
            padding: 0;
        }
        
        .site-layout {
            background: transparent;
        }
        
        /* 모든 요소가 배경을 덮어쓰지 않도록 강제 적용 */
        * {
            background: transparent !important;
        }
        
        /* 필요한 요소들만 개별적으로 배경색 재설정 */
        .main-panel, .account-info, .keypad button, .modal-content, .modal-header {
            background: rgba(255, 255, 255, 0.9) !important;
        }
        
        .container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
        }
        
        .main-panel {
            border: 1px solid rgba(200, 162, 200, 0.3);
            border-radius: 20px;
            padding: 32px 40px;
            box-shadow: 0 8px 25px rgba(200, 162, 200, 0.3);
            backdrop-filter: blur(10px);
        }
        
        .account-info {
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            text-align: center;
            border: 1px solid rgba(200, 162, 200, 0.2);
        }
        
        .account-title {
            font-size: 24px;
            font-weight: 700;
            color: #8b5a8c;
            margin-bottom: 10px;
        }
        
        .form-section {
            margin-bottom: 25px;
        }
        
        .form-section label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #8b5a8c;
            font-size: 14px;
        }
        
        .form-section input[type="text"],
        .form-section input[type="email"] {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #e1bee7;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.8) !important;
            color: #6b4c6b;
            font-size: 14px;
            box-sizing: border-box;
        }
        
        .form-section input:focus {
            outline: none;
            border-color: #c8a2c8;
            box-shadow: 0 0 8px rgba(200, 162, 200, 0.5);
        }
        
        .password-section {
            margin-bottom: 25px;
        }
        
        .password-box {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #e1bee7;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.8) !important;
            text-align: center;
            cursor: pointer;
            user-select: none;
            font-size: 18px;
            letter-spacing: 8px;
            color: #8b5a8c;
            transition: all 0.2s ease;
        }
        
        .password-box:hover {
            border-color: #c8a2c8;
            box-shadow: 0 0 8px rgba(200, 162, 200, 0.3);
        }
        
        .keypad {
            display: none;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            margin-top: 15px;
        }
        
        .keypad button {
            padding: 15px;
            border: 1px solid #e1bee7;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.9) !important;
            color: #8b5a8c;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        
        .keypad button:hover {
            background: #e1bee7 !important;
            color: #6b4c6b;
            transform: translateY(-1px);
        }
        
        .btn-primary {
            width: 100%;
            padding: 15px 28px;
            border-radius: 25px;
            background: linear-gradient(135deg, #c8a2c8 0%, #a569a5 100%);
            color: white;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(165, 105, 165, 0.3);
            font-size: 16px;
            margin-bottom: 15px;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #a569a5 0%, #8b5a8c 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(139, 90, 140, 0.4);
        }
        
        .btn-primary:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .btn-secondary {
            width: 100%;
            padding: 12px 24px;
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.8) !important;
            color: #8b5a8c;
            border: 1px solid #c8a2c8;
            cursor: pointer;
            transition: all 0.2s ease;
            font-weight: 600;
            margin-top: 10px;
        }
        
        .btn-secondary:hover {
            background: #e1bee7 !important;
            color: #6b4c6b;
            border-color: #a569a5;
        }
        
        .terms-section {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 25px;
            padding: 15px;
            background: rgba(255, 255, 255, 0.5) !important;
            border-radius: 10px;
            border: 1px solid rgba(200, 162, 200, 0.3);
        }
        
        .terms-link {
            color: #8b5a8c;
            text-decoration: none;
            font-weight: 600;
        }
        
        .terms-link:hover {
            color: #6b4c6b;
            text-decoration: underline;
        }
        
        .verification-section {
            display: none;
            margin-top: 15px;
            padding: 15px;
            background: rgba(255, 255, 255, 0.5) !important;
            border-radius: 10px;
            border: 1px solid rgba(200, 162, 200, 0.3);
        }
        
        .success-message {
            background: rgba(212, 237, 218, 0.9) !important;
            border: 1px solid #c3e6cb;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }
        
        .modal-content {
            margin: 10% auto;
            padding: 0;
            border: 1px solid rgba(200, 162, 200, 0.3);
            border-radius: 20px;
            width: 500px;
            max-width: 90%;
            box-shadow: 0 8px 25px rgba(200, 162, 200, 0.3);
            backdrop-filter: blur(10px);
        }
        
        .modal-header {
            padding: 20px 25px;
            border-bottom: 1px solid rgba(200, 162, 200, 0.3);
            border-radius: 20px 20px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .modal-title {
            font-weight: 700;
            font-size: 18px;
            color: #8b5a8c;
        }
        
        .close {
            color: #a569a5;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
            line-height: 1;
        }
        
        .close:hover {
            color: #8b5a8c;
        }
        
        .modal-body {
            padding: 25px;
            color: #6b4c6b;
        }
        
        .modal-body h4 {
            color: #8b5a8c;
            margin-top: 20px;
            margin-bottom: 10px;
        }
        
        .modal-footer {
            padding: 20px 25px;
            border-top: 1px solid rgba(200, 162, 200, 0.3);
            text-align: right;
            border-radius: 0 0 20px 20px;
        }
        
        /* 반응형 */
        @media (max-width: 768px) {
            .container {
                margin: 20px auto;
                padding: 15px;
            }
            
            .main-panel {
                padding: 24px 20px;
            }
        }
    </style>
</head>
<body class="site-layout">

    <!-- 이미 계좌가 존재하는 경우 알림 처리 -->
    <script th:if="${hasExistingAccount}">
        alert('이미 계좌가 존재합니다.');
        window.location.href = '/banking/main';
    </script>

    <!-- header fragment 포함 -->
    <div th:replace="~{header :: siteHeader('banking')}"></div>

    <!-- nav fragment 포함 -->
    <nav th:replace="~{nav :: siteNav('banking')}"></nav>

    <div class="container">
        <div class="main-panel">
            <div class="account-info">
                <div class="account-title">Own Wedding Wallet 계좌 개설</div>
            </div>

            <form onsubmit="return submitForm()">
                <div class="form-section">
                    <label for="name">이름</label>
                    <input type="text" id="name" name="name" placeholder="홍길동" required />
                </div>

                <div class="form-section">
                    <label for="email">이메일 주소</label>
                    <input type="email" id="email" name="email" placeholder="example@email.com" required />
                </div>

                <div class="form-section">
                    <button type="button" class="btn-secondary" onclick="sendEmailVerification(event)">인증 이메일 발송</button>
                </div>

                <div id="emailVerifySection" class="verification-section">
                    <label for="emailCode">인증번호 입력</label>
                    <input type="text" id="emailCode" name="emailCode" placeholder="6자리 입력" maxlength="6" />
                    <button type="button" class="btn-secondary" onclick="verifyEmailCode(event)">인증 확인</button>
                </div>

                <div class="password-section">
                    <label for="passwordInput">계좌 비밀번호 (숫자 4자리)</label>
                    <div id="passwordDisplay" class="password-box" onclick="showKeypad()" onkeydown="preventTyping(event)">○ ○ ○ ○</div>
                    <input type="hidden" id="passwordInput" name="password" maxlength="4" required />
                    <div class="keypad" id="keypad">
                        <button type="button" onclick="addNumber('1')">1</button>
                        <button type="button" onclick="addNumber('2')">2</button>
                        <button type="button" onclick="addNumber('3')">3</button>
                        <button type="button" onclick="addNumber('4')">4</button>
                        <button type="button" onclick="addNumber('5')">5</button>
                        <button type="button" onclick="addNumber('6')">6</button>
                        <button type="button" onclick="addNumber('7')">7</button>
                        <button type="button" onclick="addNumber('8')">8</button>
                        <button type="button" onclick="addNumber('9')">9</button>
                        <button type="button" onclick="hideKeypad()">취소</button>
                        <button type="button" onclick="addNumber('0')">0</button>
                        <button type="button" onclick="removeNumber()">삭제</button>
                    </div>
                </div>

                <div class="terms-section">
                    <input type="checkbox" id="agree" name="agree" required />
                    <label for="agree">약관에 동의합니다.</label>
                    <a href="#" onclick="openModal(event)" class="terms-link">[약관 보기]</a>
                </div>

                <button class="btn-primary" type="submit">계좌 개설하기</button>
            </form>
        </div>
    </div>

    <!-- 약관 모달 -->
    <div id="termsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="modal-title">계좌 개설 약관</span>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <p>본인은 계좌 개설에 필요한 모든 정보를 사실대로 입력하였으며, 전자금융거래법 및 관련 법률에 따라 제공되는 서비스 이용에 동의합니다.</p>
                <h4>제1조 (목적)</h4>
                <p>본 약관은 Own Wedding Wallet의 계좌 개설 및 이용에 관한 사항을 규정합니다.</p>
                <h4>제2조 (개인정보의 수집 및 이용)</h4>
                <p>계좌 개설을 위해 필요한 최소한의 개인정보를 수집하며, 관련 법령에 따라 안전하게 관리됩니다.</p>
                <h4>제3조 (계좌 이용 및 해지)</h4>
                <p>계좌는 본인 확인 후 이용 가능하며, 해지 시 관련 절차를 따라야 합니다.</p>
                <h4>제4조 (비밀번호 보호)</h4>
                <p>계좌 비밀번호는 본인만 알 수 있도록 안전하게 관리해야 합니다.</p>
            </div>
            <div class="modal-footer">
                <button class="btn-secondary" onclick="closeModal()">닫기</button>
            </div>
        </div>
    </div>

    <!-- footer fragment 포함 -->
    <div th:replace="~{footer :: siteFooter}"></div>

    <script src="/js/auth-buttons.js"></script>
    <script>
        const passwordInput = document.getElementById("passwordInput");
        const passwordDisplay = document.getElementById("passwordDisplay");
        const keypad = document.getElementById("keypad");

        function showKeypad() {
            keypad.style.display = "grid";
        }

        function hideKeypad() {
            keypad.style.display = "none";
        }

        function updateDisplay() {
            const length = passwordInput.value.length;
            let display = "";
            for (let i = 0; i < 4; i++) {
                display += i < length ? "● " : "○ ";
            }
            passwordDisplay.textContent = display.trim();
        }

        function addNumber(num) {
            if (passwordInput.value.length < 4) {
                passwordInput.value += num;
                updateDisplay();
            }
        }

        function removeNumber() {
            passwordInput.value = passwordInput.value.slice(0, -1);
            updateDisplay();
        }

        function preventTyping(event) {
            event.preventDefault();
        }

        function openModal(e) {
            e.preventDefault();
            document.getElementById("termsModal").style.display = "block";
        }

        function closeModal() {
            document.getElementById("termsModal").style.display = "none";
        }

        // 모달 외부 클릭 시 닫기
        window.onclick = function(event) {
            const modal = document.getElementById('termsModal');
            if (event.target == modal) {
                closeModal();
            }
        }

        function sendEmailVerification(event) {
            const button = event.target;
            const email = document.getElementById("email").value;

            if (!email || !email.includes("@")) {
                alert("유효한 이메일 주소를 입력하세요.");
                return;
            }

            const originalText = button.textContent;
            button.textContent = "발송 중...";
            button.disabled = true;

            fetch('/banking/account/send-verification', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: 'email=' + encodeURIComponent(email),
                credentials: 'include'
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    document.getElementById("emailVerifySection").style.display = "block";
                } else {
                    alert(data.message);
                }
            })
            .catch(err => {
                console.error("fetch 오류:", err);
                alert("인증번호 발송 중 오류가 발생했습니다.");
            })
            .finally(() => {
                button.textContent = originalText;
                button.disabled = false;
            });
        }

        function verifyEmailCode(event) {
            const button = event.target;
            const email = document.getElementById("email").value;
            const code = document.getElementById("emailCode").value;

            if (!code || code.length !== 6) {
                alert("6자리 인증번호를 입력하세요.");
                return;
            }

            const originalText = button.textContent;
            button.textContent = "확인 중...";
            button.disabled = true;

            fetch('/banking/account/verify-email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: 'email=' + encodeURIComponent(email) + '&code=' + encodeURIComponent(code),
                credentials: 'include'
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    const codeInput = document.getElementById("emailCode");
                    const section = document.getElementById("emailVerifySection");
                    codeInput.style.backgroundColor = "#d4edda";
                    codeInput.readOnly = true;
                    section.classList.add("success-message");
                    button.textContent = "인증 완료";
                    button.disabled = true;
                } else {
                    alert(data.message);
                    button.textContent = originalText;
                    button.disabled = false;
                }
            })
            .catch(err => {
                console.error("인증 확인 오류:", err);
                alert("인증 확인 중 오류가 발생했습니다.");
                button.textContent = originalText;
                button.disabled = false;
            });
        }

        function submitForm() {
            const name = document.getElementById("name").value;
            const email = document.getElementById("email").value;
            const emailCode = document.getElementById("emailCode").value;
            const password = passwordInput.value;
            const agree = document.getElementById("agree").checked;

            if (!name.trim()) {
                alert("이름을 입력해주세요.");
                return false;
            }

            if (!email || !email.includes("@")) {
                alert("유효한 이메일을 입력해주세요.");
                return false;
            }

            if (!emailCode || emailCode.length !== 6) {
                alert("이메일 인증번호 6자리를 입력해주세요.");
                return false;
            }

            if (password.length !== 4) {
                alert("비밀번호 4자리를 입력해주세요.");
                showKeypad();
                return false;
            }

            if (!agree) {
                alert("약관에 동의해야 계좌를 개설할 수 있습니다.");
                return false;
            }

            const submitBtn = document.querySelector('.btn-primary');
            submitBtn.textContent = "계좌 생성 중...";
            submitBtn.disabled = true;

            fetch('/banking/account/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: `name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}&emailCode=${encodeURIComponent(emailCode)}`,
                credentials: 'include'
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    window.location.href = '/banking/account/success';
                } else {
                    alert("계좌 생성 실패: " + data.message);
                    submitBtn.textContent = "계좌 개설하기";
                    submitBtn.disabled = false;
                }
            })
            .catch(err => {
                console.error("계좌 생성 오류:", err);
                alert("계좌 생성 중 오류가 발생했습니다.");
                submitBtn.textContent = "계좌 개설하기";
                submitBtn.disabled = false;
            });

            return false;
        }

        updateDisplay();
    </script>
</body>
</html>