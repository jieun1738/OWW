package com.oww.login.controller;

import com.oww.login.dto.AuthDto;
import com.oww.login.entity.User;
import com.oww.login.oauth.CustomOAuth2User;
import com.oww.login.service.AuthService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseCookie;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import jakarta.servlet.http.HttpServletResponse;

@Controller
@RequestMapping("/oauth2")
@RequiredArgsConstructor
@Slf4j
public class OAuth2Controller {

    private final AuthService authService;

    @Value("${app.oauth2.redirect-uri:http://localhost:3000/oauth2/redirect}")
    private String redirectUri;

    // ✅ 이 메서드를 주석 처리하거나 삭제
    /*
    @GetMapping("/success")
    public String oauth2LoginSuccess(@AuthenticationPrincipal OAuth2User oAuth2User,
                                     Model model,
                                     HttpServletResponse response) {
        // 이 메서드는 OAuth2LoginSuccessHandler가 처리하므로 불필요
        // 주석 처리 또는 삭제
    }
    */

    @GetMapping("/failure")
    public String oauth2LoginFailure(Model model) {
        log.warn("OAuth2 로그인 실패");
        model.addAttribute("error", "소셜 로그인에 실패했습니다.");
        return "login-result";
    }
}