<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="oww.banking.mapper.AccountMapper">

    <!-- ResultMap 정의 -->
    <resultMap id="AccountResultMap" type="oww.banking.vo.AccountVO">
        <id property="accountId" column="account_id"/>
        <result property="userEmail" column="user_email"/>
        <result property="accountName" column="account_name"/>
        <result property="balance" column="balance"/>
        <result property="createdAt" column="created_at" javaType="java.time.LocalDateTime"/>
        <result property="accountPassword" column="account_password"/>
    </resultMap>

    <!-- 계좌 생성 -->
    <insert id="createAccount" parameterType="oww.banking.vo.AccountVO">
        <selectKey keyProperty="accountId" resultType="int" order="BEFORE">
            SELECT ACCOUNT_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO accounts (
            account_id,
            user_email,
            account_name,
            balance,
            created_at,
            account_password
        ) VALUES (
            #{accountId},
            #{userEmail},
            #{accountName},
            #{balance},
            CURRENT_TIMESTAMP,
            #{accountPassword}
        )
    </insert>

    <!-- 이메일로 계좌 조회 -->
    <select id="findAccountByEmail" parameterType="String" resultMap="AccountResultMap">
        SELECT 
            account_id,
            user_email,
            account_name,
            balance,
            created_at,
            account_password
        FROM accounts 
        WHERE user_email = #{userEmail}
    </select>

    <!-- 이메일로 계좌 존재 여부 확인 -->
    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM accounts 
        WHERE user_email = #{userEmail}
    </select>

    <!-- 계좌 ID로 계좌 조회 -->
    <select id="findAccountById" parameterType="int" resultMap="AccountResultMap">
        SELECT 
            account_id,
            user_email,
            account_name,
            balance,
            created_at,
            account_password
        FROM accounts 
        WHERE account_id = #{accountId}
    </select>

    <!-- 계좌 잔액 업데이트 -->
    <update id="updateBalance" parameterType="map">
        UPDATE accounts 
        SET balance = #{balance}
        WHERE account_id = #{accountId}
    </update>

    <!-- 계좌 비밀번호 확인 -->
    <select id="verifyPassword" parameterType="map" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM accounts 
        WHERE account_id = #{accountId} 
        AND account_password = #{password}
    </select>

    <!-- 모든 계좌 조회 (관리자용) -->
    <select id="findAllAccounts" resultMap="AccountResultMap">
        SELECT 
            account_id,
            user_email,
            account_name,
            balance,
            created_at,
            account_password
        FROM accounts 
        ORDER BY created_at DESC
    </select>

    <!-- 계좌 삭제 -->
    <delete id="deleteAccount" parameterType="int">
        DELETE FROM accounts 
        WHERE account_id = #{accountId}
    </delete>

</mapper>