package com.oww.login.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;
import org.springframework.stereotype.Component;

import com.oww.login.util.JwtUtil;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.Cookie;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;

@Component
public class OAuth2LoginSuccessHandler extends SimpleUrlAuthenticationSuccessHandler {

    @Autowired
    private JwtUtil jwtUtil;  // JwtService → JwtUtil로 변경

    @Override
    public void onAuthenticationSuccess(HttpServletRequest request, 
                                      HttpServletResponse response,
                                      Authentication authentication) throws IOException, ServletException {
        
        OAuth2User oAuth2User = (OAuth2User) authentication.getPrincipal();
        
        // 사용자 정보 추출
        String email = oAuth2User.getAttribute("email");
        String name = oAuth2User.getAttribute("name");
        
        System.out.println("🎉 OAuth2 로그인 성공: " + email);
        
        try {
            // JWT 토큰 생성 (새로 추가한 메서드 사용)
            String jwtToken = jwtUtil.generateToken(email, name, "USER");
            
            // 쿠키에 JWT 토큰 저장
         // 쿠키에 JWT 토큰 저장 (개발용)
            Cookie jwtCookie = new Cookie("jwt-token", jwtToken);
            jwtCookie.setHttpOnly(false);  // JS에서 읽기 가능
            jwtCookie.setPath("/");        
            jwtCookie.setMaxAge(24 * 60 * 60); // 24시간
            response.addCookie(jwtCookie);

            
            System.out.println("✅ JWT 토큰 생성 및 쿠키 저장 완료");
            
            // Gateway 메인페이지로 리다이렉트
            String redirectUrl = "http://localhost:8201/?login=success";
            getRedirectStrategy().sendRedirect(request, response, redirectUrl);
            
            System.out.println("🔄 Gateway로 리다이렉트: " + redirectUrl);
            
        } catch (Exception e) {
            System.err.println("❌ JWT 토큰 생성 실패: " + e.getMessage());
            // 실패 시에도 Gateway로 리다이렉트 (에러 파라미터 포함)
            getRedirectStrategy().sendRedirect(request, response, "http://localhost:8201/?login=error");
        }
    }
}