<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>이체 내역 조회</title>
    <link rel="stylesheet" href="/css/page.css" />
    <link rel="stylesheet" href="/css/design.css" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://cdn.jsdelivr.net/npm/tsparticles@2.12.0/tsparticles.bundle.min.js"></script>
    <style>
        body {
            display: block !important;
            justify-content: initial !important;
            align-items: initial !important;
            background: linear-gradient(135deg, #f8d7da 0%, #e1bee7 50%, #c8a2c8 100%);
            min-height: 100vh;
            font-family: Arial, sans-serif;
            color: #6b4c6b;
            margin: 0;
            padding: 0;
        }
        
        .site-layout {
            background: transparent;
        }
        
        /* 헤더와 네비게이션을 투명하게 강제 설정 */
        header.site-header,
        header,
        nav.site-nav,
        nav {
            background: transparent !important;
            background-color: transparent !important;
            backdrop-filter: none !important;
            border: none !important;
            box-shadow: none !important;
        }
        
        /* 네비게이션 텍스트 가독성 개선 */
        nav .site-nav__link,
        nav a {
            color: #6b4c6b !important;
            font-weight: 600 !important;
            text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8) !important;
        }
        
        nav .site-nav__link:hover,
        nav a:hover {
            color: #8b5a8c !important;
            text-shadow: 0 1px 3px rgba(255, 255, 255, 0.9) !important;
        }
        
        nav .site-nav__link.is-active {
            color: #4a2c4a !important;
            font-weight: 700 !important;
        }
        
        /* 드롭다운 메뉴도 개선 */
        nav .site-nav__dropdown {
            background: rgba(255, 255, 255, 0.95) !important;
            border: 1px solid rgba(200, 162, 200, 0.3) !important;
            border-radius: 10px !important;
            box-shadow: 0 4px 15px rgba(200, 162, 200, 0.3) !important;
        }
        
        nav .site-nav__dropdown a {
            color: #6b4c6b !important;
            text-shadow: none !important;
        }
        
        nav .site-nav__dropdown a:hover {
            background: rgba(225, 190, 231, 0.3) !important;
            color: #8b5a8c !important;
        }
        .main-panel, .account-info, .search-section, .history-table th, .modal-content, .modal-header {
            background: rgba(255, 255, 255, 0.9) !important;
        }
        
        .history-table {
            background: rgba(255, 255, 255, 0.9) !important;
        }
        
        .history-table tbody tr {
            background: rgba(255, 255, 255, 0.7) !important;
        }
        
        .date-input {
            background: rgba(255, 255, 255, 0.8) !important;
        }
        
        .no-data, .loading {
            background: rgba(255, 255, 255, 0.7) !important;
        }

        .container {
            max-width: 1200px;
            margin: 50px auto;
            padding: 20px;
        }

        .main-panel {
            border-radius: 20px;
            padding: 32px 40px;
            box-shadow: 0 8px 25px rgba(200, 162, 200, 0.3);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .account-info {
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            text-align: center;
            border: 1px solid rgba(200, 162, 200, 0.2);
            box-shadow: 0 4px 15px rgba(200, 162, 200, 0.2);
        }

        .account-number {
            font-size: 22px;
            font-weight: 600;
            color: #8b5a8c;
            margin-bottom: 8px;
        }

        .balance {
            font-size: 28px;
            font-weight: 700;
            color: #6b4c6b;
        }

        .search-section {
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 30px;
            border: 1px solid rgba(200, 162, 200, 0.2);
            box-shadow: 0 4px 15px rgba(200, 162, 200, 0.2);
        }

        .search-row {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            gap: 15px;
            flex-wrap: wrap;
        }

        .search-row:last-child {
            margin-bottom: 0;
        }

        .search-label {
            min-width: 100px;
            font-weight: 600;
            color: #8b5a8c;
            font-size: 14px;
        }

        .date-input {
            padding: 10px 15px;
            border: 1px solid #e1bee7;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.8) !important;
            color: #6b4c6b;
            font-size: 14px;
        }

        .date-input:focus {
            outline: none;
            border-color: #c8a2c8;
            box-shadow: 0 0 8px rgba(200, 162, 200, 0.5);
        }

        .search-btn {
            padding: 10px 20px;
            border-radius: 20px;
            background: linear-gradient(135deg, #c8a2c8 0%, #a569a5 100%) !important;
            color: white !important;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(165, 105, 165, 0.3);
        }

        .search-btn:hover {
            background: linear-gradient(135deg, #a569a5 0%, #8b5a8c 100%) !important;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(139, 90, 140, 0.4);
        }

        .history-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(200, 162, 200, 0.2);
        }

        .history-table th {
            padding: 18px 15px;
            text-align: center;
            font-size: 14px;
            font-weight: 700;
            color: #8b5a8c;
            border-bottom: 1px solid rgba(200, 162, 200, 0.3);
        }

        .history-table td {
            padding: 15px;
            text-align: center;
            font-size: 14px;
            border-bottom: 1px solid rgba(200, 162, 200, 0.1);
        }

        .history-table tbody tr {
            cursor: pointer;
            transition: all 0.2s ease;
            background: rgba(255, 255, 255, 0.7) !important;
        }

        .history-table tbody tr:hover {
            background: rgba(225, 190, 231, 0.3) !important;
            transform: translateY(-1px);
        }

        .transfer-out, .safe-deposit, .safe-withdraw, .regular-payment {
            color: #d63384;
            font-weight: 600;
        }

        .transfer-in {
            color: #6b4c6b;
            font-weight: 600;
        }

        .no-data, .loading {
            text-align: center;
            padding: 40px 20px;
            color: #a569a5;
            font-size: 16px;
            font-weight: 500;
            background: rgba(255, 255, 255, 0.7) !important;
            border-radius: 15px;
            border: 1px solid rgba(200, 162, 200, 0.2);
        }

        /* 모달 스타일 */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(107, 76, 107, 0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            margin: 5% auto;
            padding: 0;
            border: 1px solid rgba(200, 162, 200, 0.3);
            border-radius: 20px;
            width: 600px;
            max-width: 90%;
            box-shadow: 0 15px 35px rgba(200, 162, 200, 0.4);
            backdrop-filter: blur(10px);
            animation: modalFadeIn 0.3s ease;
        }

        @keyframes modalFadeIn {
            from { opacity: 0; transform: translateY(-30px) scale(0.95); }
            to { opacity: 1; transform: translateY(0) scale(1); }
        }

        .modal-header {
            padding: 25px 30px;
            border-bottom: 1px solid rgba(200, 162, 200, 0.3);
            border-radius: 20px 20px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-weight: 700;
            font-size: 20px;
            color: #8b5a8c;
        }

        .close {
            color: #a569a5;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            line-height: 1;
            transition: color 0.2s ease;
        }

        .close:hover {
            color: #8b5a8c;
        }

        .modal-body {
            padding: 30px;
        }

        .detail-row {
            display: flex;
            margin-bottom: 20px;
            align-items: flex-start;
            padding: 12px 0;
            border-bottom: 1px solid rgba(200, 162, 200, 0.1);
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            min-width: 150px;
            font-weight: 600;
            color: #8b5a8c;
            font-size: 14px;
        }

        .detail-value {
            flex: 1;
            color: #6b4c6b;
            font-size: 14px;
            line-height: 1.4;
        }

        .amount-large {
            font-size: 20px;
            font-weight: 700;
            color: #6b4c6b;
        }

        .amount-red {
            font-size: 20px;
            font-weight: 700;
            color: #d63384;
        }

        .modal-footer {
            padding: 20px 30px;
            border-top: 1px solid rgba(200, 162, 200, 0.2);
            text-align: right;
            border-radius: 0 0 20px 20px;
        }

        .btn-close {
            padding: 12px 25px;
            border-radius: 20px;
            background: linear-gradient(135deg, #c8a2c8 0%, #a569a5 100%) !important;
            color: white !important;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(165, 105, 165, 0.3);
        }

        .btn-close:hover {
            background: linear-gradient(135deg, #a569a5 0%, #8b5a8c 100%) !important;
            transform: translateY(-1px);
            box-shadow: 0 6px 20px rgba(139, 90, 140, 0.4);
        }

        /* 반응형 */
        @media (max-width: 768px) {
            .container {
                margin: 20px auto;
                padding: 15px;
            }
            
            .main-panel {
                padding: 24px 20px;
            }
            
            .search-row {
                flex-direction: column;
                align-items: stretch;
                gap: 10px;
            }
            
            .search-label {
                min-width: auto;
                text-align: left;
            }
            
            .date-input {
                width: 100%;
            }
            
            .modal-content {
                width: 95%;
                margin: 10% auto;
            }
            
            .modal-header, .modal-body, .modal-footer {
                padding: 20px;
            }
            
            .detail-row {
                flex-direction: column;
                gap: 5px;
            }
            
            .detail-label {
                min-width: auto;
            }
        }
    </style>
</head>
<body class="site-layout">

    <!-- header fragment 포함 -->
    <div th:replace="~{header :: siteHeader('banking')}"></div>

    <!-- nav fragment 포함 -->
    <nav th:replace="~{nav :: siteNav('banking')}"></nav>

    <div class="container">
        <div class="main-panel">
            <div class="account-info">
                <div class="account-number" th:text="${account?.accountNumber ?: '계좌 없음'}">1001-2025-000021</div>
                <div class="balance" th:text="'₩' + ${#numbers.formatInteger(account?.balance ?: 0, 3, 'COMMA')}">₩65,680,000</div>
            </div>

            <div class="search-section">
                <div class="search-row">
                    <span class="search-label">조회기간</span>
                    <input type="date" class="date-input" id="startDate" value="2025-07-01">
                    <span style="color: #8b5a8c; font-weight: 600;">~</span>
                    <input type="date" class="date-input" id="endDate" value="2025-08-22">
                    <button class="search-btn" onclick="loadTransferHistory()">조회</button>
                </div>
                <div class="search-row">
                    <span class="search-label">메모검색</span>
                    <input type="text" class="date-input" id="memoKeyword" placeholder="메모 내용 입력 (실시간 검색)" style="flex: 1; max-width: 250px;" oninput="filterByMemo()">
                    <button class="search-btn" onclick="clearMemoFilter()">초기화</button>
                </div>
            </div>

            <div id="loadingDiv" class="loading" style="display: none;">
                데이터를 불러오는 중...
            </div>

            <table class="history-table" id="historyTable">
                <thead>
                    <tr>
                        <th>거래일자</th>
                        <th>거래구분</th>
                        <th>거래금액</th>
                        <th>메모</th>
                    </tr>
                </thead>
                <tbody id="historyTableBody">
                    <tr th:each="item, stat : ${history}" th:onclick="'showDetail(' + ${stat.index} + ')'"
                        th:data-tx-id="${item.txId}"
                        th:data-tx-type="${item.txType}"
                        th:data-amount="${item.amount}"
                        th:data-memo="${item.memo}"
                        th:data-tx-date="${item.txDate}">
                        <td th:text="${#temporals.format(item.txDate, 'MM/dd')}">08/22</td>
                        <td th:text="${item.txType == 'TRANSFER_OUT' ? '출금' : 
                                      item.txType == 'TRANSFER_IN' ? '입금' : 
                                      item.txType == 'SAFE_DEPOSIT' ? '세이프입금' :
                                      item.txType == 'SAFE_WITHDRAW' ? '세이프출금' : '정기납부'}"
                            th:class="${item.txType == 'TRANSFER_IN' ? 'transfer-in' : 'transfer-out'}">출금</td>
                        <td th:text="'₩' + ${#numbers.formatInteger(item.amount, 3, 'COMMA')}"
                            th:class="${item.txType == 'TRANSFER_IN' ? 'transfer-in' : 'transfer-out'}">₩45,000</td>
                        <td th:text="${item.memo}">식비</td>
                    </tr>
                </tbody>
            </table>

            <div id="noDataDiv" class="no-data" style="display: none;">
                조회된 거래 내역이 없습니다.
            </div>
        </div>
    </div>

    <!-- 모달 -->
    <div id="detailModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="modal-title">거래 상세 내역</span>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <div class="detail-row">
                    <span class="detail-label">거래 번호</span>
                    <span class="detail-value" id="detail-tx-id">-</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">거래 구분</span>
                    <span class="detail-value" id="detail-type">-</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">거래 일시</span>
                    <span class="detail-value" id="detail-date">-</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">거래 내용</span>
                    <span class="detail-value" id="detail-memo">-</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">처리점</span>
                    <span class="detail-value">OWW 인터넷뱅킹</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">거래 금액</span>
                    <span class="detail-value" id="detail-amount">-</span>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn-close" onclick="closeModal()">닫기</button>
            </div>
        </div>
    </div>

    <!-- footer fragment 포함 -->
    <div th:replace="~{footer :: siteFooter}"></div>

    <script src="/js/auth-buttons.js"></script>
    <script>
        let currentHistoryData = [];
        let originalHistoryData = [];
        
        document.addEventListener('DOMContentLoaded', function() {
            const historyElements = document.querySelectorAll('#historyTableBody tr[data-tx-id]');
            originalHistoryData = Array.from(historyElements).map(row => ({
                txId: row.dataset.txId,
                txType: row.dataset.txType,
                amount: parseInt(row.dataset.amount),
                memo: row.dataset.memo,
                txDate: row.dataset.txDate
            }));
            currentHistoryData = [...originalHistoryData];
        });

        function showDetail(index) {
            const data = currentHistoryData[index];
            if (data) {
                updateDetailModal(data);
                openModal();
            }
        }

        function updateDetailModal(data) {
            const typeMap = {
                'TRANSFER_OUT': '일반 이체 (출금)',
                'TRANSFER_IN': '일반 이체 (입금)',
                'SAFE_DEPOSIT': '세이프박스 입금',
                'SAFE_WITHDRAW': '세이프박스 출금',
                'REGULAR_PAYMENT': '정기 납부'
            };

            const date = new Date(data.txDate);
            const formattedDate = `${date.getFullYear()}년 ${String(date.getMonth() + 1).padStart(2, '0')}월 ${String(date.getDate()).padStart(2, '0')}일 ${date.getHours() < 12 ? '오전' : '오후'} ${String(date.getHours() % 12 || 12).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;

            const formattedAmount = '₩' + data.amount.toLocaleString();
            const amountClass = data.txType === 'TRANSFER_IN' ? 'amount-large' : 'amount-red';

            document.getElementById('detail-tx-id').textContent = data.txId;
            document.getElementById('detail-type').textContent = typeMap[data.txType] || data.txType;
            document.getElementById('detail-date').textContent = formattedDate;
            document.getElementById('detail-memo').textContent = data.memo || '-';
            
            const amountElement = document.getElementById('detail-amount');
            amountElement.textContent = formattedAmount;
            amountElement.className = `detail-value ${amountClass}`;
        }

        function openModal() {
            document.getElementById('detailModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeModal() {
            document.getElementById('detailModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        window.onclick = function(event) {
            const modal = document.getElementById('detailModal');
            if (event.target == modal) {
                closeModal();
            }
        }

        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal();
            }
        });

        function filterByMemo() {
            const memoKeyword = document.getElementById('memoKeyword').value.trim().toLowerCase();
            const historyTable = document.getElementById('historyTable');
            const noDataDiv = document.getElementById('noDataDiv');
            
            if (!memoKeyword) {
                currentHistoryData = [...originalHistoryData];
                updateHistoryTable(currentHistoryData);
                historyTable.style.display = 'table';
                noDataDiv.style.display = 'none';
                return;
            }
            
            const filteredData = originalHistoryData.filter(item => 
                item.memo && item.memo.toLowerCase().includes(memoKeyword)
            );
            
            currentHistoryData = filteredData;
            
            if (filteredData.length > 0) {
                updateHistoryTable(filteredData);
                historyTable.style.display = 'table';
                noDataDiv.style.display = 'none';
            } else {
                historyTable.style.display = 'none';
                document.getElementById('noDataDiv').innerHTML = `'${document.getElementById('memoKeyword').value}' 검색 결과가 없습니다.`;
                noDataDiv.style.display = 'block';
            }
        }

        function clearMemoFilter() {
            document.getElementById('memoKeyword').value = '';
            currentHistoryData = [...originalHistoryData];
            updateHistoryTable(currentHistoryData);
            document.getElementById('historyTable').style.display = 'table';
            document.getElementById('noDataDiv').style.display = 'none';
        }

        function loadTransferHistory() {
            const loadingDiv = document.getElementById('loadingDiv');
            const historyTable = document.getElementById('historyTable');
            const noDataDiv = document.getElementById('noDataDiv');
            
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            if (!startDate || !endDate) {
                alert('조회 기간을 선택해주세요.');
                return;
            }
            
            if (startDate > endDate) {
                alert('시작일이 종료일보다 클 수 없습니다.');
                return;
            }
            
            loadingDiv.style.display = 'block';
            historyTable.style.display = 'none';
            noDataDiv.style.display = 'none';

            const url = `/banking/history-data?startDate=${startDate}&endDate=${endDate}`;
            
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    loadingDiv.style.display = 'none';
                    
                    if (data.success && data.history && data.history.length > 0) {
                        originalHistoryData = data.history;
                        updateHistoryTable(data.history);
                        historyTable.style.display = 'table';
                    } else {
                        noDataDiv.style.display = 'block';
                    }
                })
                .catch(error => {
                    loadingDiv.style.display = 'none';
                    noDataDiv.style.display = 'block';
                    console.error('Error:', error);
                });
        }

        function updateHistoryTable(history) {
            const tbody = document.getElementById('historyTableBody');
            currentHistoryData = history;
            
            tbody.innerHTML = '';
            
            history.forEach((item, index) => {
                const row = document.createElement('tr');
                row.onclick = () => showDetail(index);
                
                const date = new Date(item.txDate);
                const formattedDate = `${String(date.getMonth() + 1).padStart(2, '0')}/${String(date.getDate()).padStart(2, '0')}`;
                
                const typeText = {
                    'TRANSFER_OUT': '출금',
                    'TRANSFER_IN': '입금',
                    'SAFE_DEPOSIT': '세이프입금',
                    'SAFE_WITHDRAW': '세이프출금',
                    'REGULAR_PAYMENT': '정기납부'
                };
                
                const typeClass = item.txType === 'TRANSFER_IN' ? 'transfer-in' : 'transfer-out';
                
                row.innerHTML = `
                    <td>${formattedDate}</td>
                    <td class="${typeClass}">${typeText[item.txType] || item.txType}</td>
                    <td class="${typeClass}">₩${item.amount.toLocaleString()}</td>
                    <td>${item.memo || '-'}</td>
                `;
                
                tbody.appendChild(row);
            });
        }
    </script>
</body>
</html>