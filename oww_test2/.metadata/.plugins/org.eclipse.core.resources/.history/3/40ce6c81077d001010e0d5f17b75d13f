<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="oww.banking.mapper.UserMapper">

    <!-- UserVO 결과 매핑 -->
    <resultMap id="UserResultMap" type="oww.banking.vo.UserVO">
        <id property="userNo" column="USERNO"/>
        <result property="userEmail" column="USER_EMAIL"/>
        <result property="name" column="NAME"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="isActive" column="IS_ACTIVE"/>
        <result property="providerId" column="PROVIDER_ID"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="provider" column="PROVIDER"/>
        <result property="role" column="ROLE"/>
    </resultMap>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" parameterType="String" resultMap="UserResultMap">
        SELECT 
            USERNO,
            USER_EMAIL,
            NAME,
            CREATED_AT,
            IS_ACTIVE,
            PROVIDER_ID,
            UPDATED_AT,
            PROVIDER,
            ROLE
        FROM users 
        WHERE USER_EMAIL = #{email}
    </select>

    <!-- 이메일로 사용자 존재 여부 확인 -->
    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT 
            CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM users 
        WHERE USER_EMAIL = #{email}
    </select>

    <!-- 새 사용자 생성 -->
    <insert id="createUser" parameterType="oww.banking.vo.UserVO">
        <selectKey keyProperty="userNo" resultType="long" order="BEFORE">
            SELECT users_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO users (
            USERNO,
            USER_EMAIL,
            NAME,
            CREATED_AT,
            IS_ACTIVE,
            PROVIDER_ID,
            UPDATED_AT,
            PROVIDER,
            ROLE
        ) VALUES (
            #{userNo},
            #{userEmail},
            #{name},
            SYSTIMESTAMP,
            #{isActive},
            #{providerId},
            SYSTIMESTAMP,
            #{provider},
            #{role}
        )
    </insert>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUser" parameterType="oww.banking.vo.UserVO">
        UPDATE users 
        SET 
            NAME = #{name},
            IS_ACTIVE = #{isActive},
            PROVIDER_ID = #{providerId},
            UPDATED_AT = SYSTIMESTAMP,
            PROVIDER = #{provider},
            ROLE = #{role}
        WHERE USERNO = #{userNo}
    </update>

</mapper>