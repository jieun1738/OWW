<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>세이프박스 입출금 및 정기저금통</title>

<link rel="stylesheet" th:href="@{/css/safebox_css.css}" />
<link rel="stylesheet" href="/css/page.css" />
<link rel="stylesheet" href="/css/design.css" />
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

<style>
body {
    background: linear-gradient(135deg, #f8d7da 0%, #e1bee7 50%, #c8a2c8 100%);
    font-family: 'Noto Sans KR', sans-serif;
    margin: 0;
    padding: 0;
    min-height: 100vh;
}

.container {
    max-width: 1200px;
    margin: 50px auto;
    padding: 0 20px;
}

.card {
    background: rgba(255, 255, 255, 0.9);
    border-radius: 20px;
    padding: 30px 40px;
    margin-bottom: 40px;
    box-shadow: 0 8px 25px rgba(200, 162, 200, 0.3);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.section-title {
    font-size: 22px;
    font-weight: 700;
    color: #6b4c6b;
    margin-bottom: 20px;
}

.balance-info {
    display: flex;
    justify-content: space-between;
    margin-bottom: 12px;
    font-size: 16px;
    color: #8b5a8c;
}

#currentAmount {
    font-weight: 700;
    font-size: 18px;
    margin-bottom: 10px;
    color: #6b4c6b;
    text-align: center;
}

.slider-container {
    margin: 15px 0;
}

input[type="range"] {
    width: 100%;
    height: 8px;
    border-radius: 5px;
    background: #e1bee7;
    outline: none;
    -webkit-appearance: none;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: #a569a5;
    cursor: pointer;
    box-shadow: 0 0 5px rgba(0,0,0,0.2);
    transition: background 0.3s ease;
}

input[type="range"]::-webkit-slider-thumb:hover {
    background: #8b5a8c;
}

.step-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
}

.step-buttons button, .submit-btn {
    padding: 10px 20px;
    border-radius: 25px;
    border: none;
    cursor: pointer;
    font-weight: 600;
    background: linear-gradient(135deg, #c8a2c8 0%, #a569a5 100%);
    color: #fff;
    transition: all 0.3s ease;
}

.step-buttons button:hover, .submit-btn:hover {
    background: linear-gradient(135deg, #a569a5 0%, #8b5a8c 100%);
    transform: translateY(-2px);
}

.note {
    margin-top: 15px;
    font-size: 14px;
    color: #a569a5;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 6px;
    font-weight: 600;
    color: #6b4c6b;
}

.form-group input[type="number"], .form-group input[type="date"] {
    width: 100%;
    padding: 10px 12px;
    border-radius: 8px;
    border: 1px solid #d1b2d1;
    outline: none;
    font-size: 14px;
}

.radio-group label {
    margin-right: 20px;
    font-weight: 500;
    color: #8b5a8c;
}

.goal-item {
    background: #fff0f5;
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 15px;
    border: 1px solid #d1b2d1;
}

.goal-item h4 {
    font-size: 18px;
    font-weight: 700;
    color: #6b4c6b;
    margin-bottom: 8px;
}

.goal-item p {
    font-size: 14px;
    color: #8b5a8c;
    margin: 3px 0;
}

.goal-item button {
    margin-top: 10px;
    background: linear-gradient(135deg, #c8a2c8 0%, #a569a5 100%);
    color: #fff;
    border: none;
    border-radius: 20px;
    padding: 8px 16px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.goal-item button:hover {
    background: linear-gradient(135deg, #a569a5 0%, #8b5a8c 100%);
}

@media (max-width: 768px) {
    .step-buttons {
        flex-direction: column;
        gap: 10px;
    }
}
</style>
</head>
<body class="site-layout">

<!-- header fragment 포함 -->
<div th:replace="~{header :: siteHeader('banking')}"></div>

<!-- nav fragment 포함 -->
<nav th:replace="~{nav :: siteNav('banking')}"></nav>

<div class="container">

    <!-- 💰 세이프박스 카드 -->
    <div class="card">
        <div class="section-title">💰 세이프박스 입출금</div>

        <div class="balance-info">
            <div>내 잔액</div>
            <div id="balance"
                th:text="'₩' + ${#numbers.formatInteger(balance ?: 0, 3, 'COMMA')}">₩1,200,000</div>
        </div>
        <div class="balance-info">
            <div>세이프박스</div>
            <div id="savedAmount"
                th:text="'₩' + ${#numbers.formatInteger(safeboxBalance ?: 0, 3, 'COMMA')}">₩300,000</div>
        </div>

        <div class="slider-container">
            <div id="currentAmount">₩300,000</div>
            <input type="range" id="slider" th:min="0"
                th:max="${totalAssets ?: 1200000}" step="10000"
                th:value="${safeboxBalance ?: 300000}" />
            <div class="step-buttons">
                <button type="button" onclick="adjust(-10000)">-1만</button>
                <button type="button" onclick="adjust(10000)">+1만</button>
            </div>
        </div>

        <button class="submit-btn" onclick="submitAmount()">금액 설정하기</button>

        <div class="note">
            세이프박스 해제 예정일: 2025.08.10<br /> 출금은 해제일 이후에 가능합니다.
        </div>
    </div>

    <!-- 🎯 정기저금통 카드 -->
    <div class="card">
        <div class="section-title">🎯 정기저금통 설정</div>

        <form id="autoSaveForm">
            <div class="form-group">
                <label>목표 금액</label>
                <input type="number" id="goalAmount" name="goalAmount" placeholder="예: 500000" required />
            </div>

            <div class="form-group">
                <label>시작일</label>
                <input type="date" id="startDate" name="startDate" required />
            </div>

            <div class="form-group">
                <label>종료일 (목표 달성일)</label>
                <input type="date" id="endDate" name="endDate" required />
            </div>

            <div class="form-group">
                <label>자동 저축 주기</label>
                <div class="radio-group">
                    <label><input type="radio" name="cycle" value="daily" checked /> 매일</label>
                    <label><input type="radio" name="cycle" value="monthly" /> 매월</label>
                </div>
            </div>

            <div class="form-group">
                <label>자동 저축 금액</label>
                <input type="number" id="autoAmount" placeholder="자동 계산됨" readonly />
            </div>

            <button class="submit-btn" type="submit">정기저금통 설정하기</button>
        </form>
    </div>

    <!-- 저축 목표 리스트 -->
    <div class="card" th:if="${goals != null and !goals.isEmpty()}">
        <div class="section-title">📋 내 저축 목표</div>
        <div th:each="goal : ${goals}" class="goal-item">
            <h4 th:text="${goal.title}">저축 목표</h4>
            <p>목표 금액: <span th:text="'₩' + ${#numbers.formatInteger(goal.targetAmount, 3, 'COMMA')}">₩500,000</span></p>
            <p>기간: <span th:text="${goal.startDate}">2025-01-01</span> ~ <span th:text="${goal.endDate}">2025-12-31</span></p>
            <p>저축 주기: <span th:text="${goal.paymentType == 'daily' ? '매일' : '매월'}">매일</span></p>
            <button type="button" onclick="viewGoalDetail(/*[[${goal.goalId}]]*/ 1)">상세보기</button>
        </div>
    </div>

</div>

<!-- footer fragment 포함 -->
<div th:replace="~{footer :: siteFooter}"></div>

<script src="/js/auth-buttons.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- 기존 JS 로직 그대로 -->
<script>
// 💰 세이프박스 로직
const slider = document.getElementById("slider");
const currentAmount = document.getElementById("currentAmount");
const savedDisplay = document.getElementById("savedAmount");
const balanceDisplay = document.getElementById("balance");

function formatCurrency(value) {
  return '₩' + value.toLocaleString();
}

const initialSafeboxBalance = /*[[${safeboxBalance ?: 0}]]*/ 0;
const totalAssets = /*[[${totalAssets ?: 1200000}]]*/ 1200000;

slider.value = initialSafeboxBalance;
currentAmount.textContent = formatCurrency(initialSafeboxBalance);

slider.addEventListener("input", () => {
  currentAmount.textContent = formatCurrency(Number(slider.value));
});

function adjust(amount) {
  let newValue = Number(slider.value) + amount;
  newValue = Math.min(Math.max(newValue, Number(slider.min)), Number(slider.max));
  slider.value = newValue;
  currentAmount.textContent = formatCurrency(newValue);
}

function submitAmount() {
  const amount = Number(slider.value);
  
  $.ajax({
    url: '/banking/safebox/setAmount',
    type: 'POST',
    data: { amount: amount },
    success: function(response) {
      if (response.success) {
        savedDisplay.textContent = formatCurrency(response.safeboxBalance);
        balanceDisplay.textContent = formatCurrency(response.accountBalance);
        alert(response.message);
      } else {
        alert(response.message);
      }
    },
    error: function() { alert('서버 오류가 발생했습니다.'); }
  });
}

// 🎯 정기저금통 로직
const goalInput = document.getElementById("goalAmount");
const startDate = document.getElementById("startDate");
const endDate = document.getElementById("endDate");
const autoAmount = document.getElementById("autoAmount");

function calculateAutoSaveAmount() {
  const goal = Number(goalInput.value);
  const start = new Date(startDate.value);
  const end = new Date(endDate.value);
  const cycle = document.querySelector('input[name="cycle"]:checked').value;

  if (!goal || !startDate.value || !endDate.value || start >= end) {
    autoAmount.value = '';
    return;
  }

  const msPerDay = 24 * 60 * 60 * 1000;
  const diffDays = Math.ceil((end - start) / msPerDay);
  const diffMonths = Math.ceil(diffDays / 30);

  let periods = cycle === 'daily' ? diffDays : diffMonths;
  if (periods <= 0) { autoAmount.value = ''; return; }

  const perAmount = Math.ceil(goal / periods);
  autoAmount.value = perAmount;
}

goalInput.addEventListener("input", calculateAutoSaveAmount);
startDate.addEventListener("change", calculateAutoSaveAmount);
endDate.addEventListener("change", calculateAutoSaveAmount);
document.querySelectorAll('input[name="cycle"]').forEach(radio => {
  radio.addEventListener("change", calculateAutoSaveAmount);
});

document.getElementById("autoSaveForm").addEventListener("submit", function(e) {
  e.preventDefault();
  const formData = {
    goalAmount: goalInput.value,
    startDate: startDate.value,
    endDate: endDate.value,
    cycle: document.querySelector('input[name="cycle"]:checked').value
  };
  $.ajax({
    url: '/banking/safebox/createGoal',
    type: 'POST',
    data: formData,
    success: function(response) {
      if (response.success) {
        alert(response.message);
        location.reload();
      } else { alert(response.message); }
    },
    error: function() { alert('서버 오류가 발생했습니다.'); }
  });
});

function viewGoalDetail(goalId) {
  window.location.href = '/banking/safebox/goal/' + goalId;
}

$(document).ready(function() { updateSafeboxInfo(); });

function updateSafeboxInfo() {
  $.ajax({
    url: '/banking/safebox/info',
    type: 'GET',
    success: function(response) {
      if (response.success) {
        balanceDisplay.textContent = formatCurrency(response.accountBalance);
        savedDisplay.textContent = formatCurrency(response.safeboxBalance);
        slider.max = response.totalAssets;
      }
    },
    error: function() { console.log('정보 업데이트 중 오류 발생'); }
  });
}
</script>

</body>
</html>
