<!DOCTYPE html>
<html lang="ko">
<head>
<link rel="stylesheet" href="/css/page.css" />
<title>Own Wedding Wallet</title>

</head>
<body>

	<header>
		<h1 class="logo">Own Wedding Wallet</h1>
	</header>

	<nav>
			<div class="nav-item">
				<a href="/main" class="nav-link">뱅킹서비스</a>
				<div class="dropdown">
					<a href="/createAccount">계좌생성</a> <a href="transfer_1">이체</a> <a href="safebox">세이프박스</a>
				</div>
			</div>
			<div class="nav-item">
				<a href="#wedding" class="nav-link">웨딩플래너</a>
				<div class="dropdown">
					<a href="#">추천테마</a> <a href="#">DIY</a>
				</div>
			</div>
			<div class="nav-item">
				<a href="#loan" class="nav-link">대출</a>
				<div class="dropdown">
					<a href="#">대출상품</a> <a href="#">대출상환</a>
				</div>
			</div>
			<div class="nav-item">
				<a href="#mypage" class="nav-link">마이페이지</a>
			</div>
		</nav>


	<section class="service-cards">

		<article class="service-card">

			<div class="service-card-center">
				<p class="transfer-name">홍길동 님</p>
				<p class="transfer-account">계좌번호: 123-4567-8901</p>
				<p class="transfer-balance">잔액: 25,000,000원</p>



				<br> <br> <br> <br> <br>
				<!-- 계좌번호 표시와 버튼을 감싸는 영역 -->
				<div class="button-row">

					<!-- 은행 선택 버튼 영역 -->
					<div class="bank-select-box">
						<button id="openBankModalBtn" class="underline-btn">은행 선택</button>
					</div>

					<!-- 은행 선택 모달 -->
					<div id="bankModal" class="modal">
						<div class="modal-content">
							<span class="close">&times;</span>
							<h3>은행을 선택하세요</h3>
							<div class="bank-list">
								<button class="bank-btn" data-bank="kookmin" title="국민은행">
									<img src="/images/kookmin-logo.png" alt="국민은행" />
								</button>
								<button class="bank-btn" data-bank="shinhan" title="신한은행">
									<img src="/images/shinhan-logo.png" alt="신한은행" />
								</button>
								<button class="bank-btn" data-bank="hana" title="하나은행">
									<img src="/images/hana-logo.png" alt="하나은행" />
								</button>
								<button class="bank-btn" data-bank="woori" title="우리은행">
									<img src="/images/woori-logo.png" alt="우리은행" />
								</button>
								<!-- 필요하면 은행 추가 -->
							</div>
						</div>
					</div>

					<!-- 계좌번호 표시와 버튼을 감싸는 영역 -->
					<div class="account-box">
						<!-- 계좌번호 표시 영역 (처음에는 숨김) -->
						<p id="accountDisplay" class="account-display"
							style="display: none;"></p>
						<!-- 계좌번호 입력 버튼 -->
						<button id="openModalBtn" class="underline-btn">계좌번호 입력</button>
					</div>

					<!-- 모달 구조 -->
					<div id="accountModal" class="modal">
						<div class="modal-content">
							<span class="close">&times;</span>
							<h3>계좌번호를 입력하세요</h3>
							<input type="text" id="accountInputModal"
								placeholder="예: 12345678901234" />
							<button id="confirmAccountBtn">확인</button>
						</div>
					</div>
				</div>
				<br>

				<!-- 여기에 이체 금액 입력 필드 추가 -->
				<input type="text" id="transferAmount" placeholder="이체할 금액을 입력하세요"
					maxlength="12" oninput="formatAmount(this)" /> <br>
				<button class="transfer-btn" type="submit" id="transferBtn" disabled>이체하기</button>
				<br>
			</div>

		</article>


		<!-- 이체 확인 모달 -->
		<div id="confirmTransferModal" class="modal">
			<div class="modal-content">
				<span class="close">&times;</span>
				<h3>이체 정보를 확인해주세요</h3>
				<p id="confirmBank"></p>
				<p id="confirmAccount"></p>
				<p id="confirmAmount"></p>
				<br>
				<button id="finalTransferBtn">확인</button>
				<button id="cancelTransferBtn">취소</button>
			</div>
		</div>

	</section>

	<footer> &copy; 2025 Wedding Planner Co. All rights reserved.
	</footer>

<script src="/js/auth-buttons.js"></script>


	<script>
  //요소들 선택
  const modal = document.getElementById('accountModal');
  const openModalBtn = document.getElementById('openModalBtn');
  const closeModalBtn = document.querySelector('#accountModal .close');
  const confirmBtn = document.getElementById('confirmAccountBtn');
  const accountInput = document.getElementById('accountInputModal');
  const accountDisplay = document.getElementById('accountDisplay');
  const bankModal = document.getElementById('bankModal');
  const openBankModalBtn = document.getElementById('openBankModalBtn');
  const closeBankModalBtn = bankModal.querySelector('.close');
  const bankSelectBox = document.querySelector('.bank-select-box');
  const transferAmountInput = document.getElementById('transferAmount');
  const transferBtn = document.getElementById('transferBtn');

  // 계좌번호 입력 모달 열기
  openModalBtn.onclick = () => {
    modal.style.display = 'flex';
    accountInput.value = '';
    accountInput.focus();
  };

  // 계좌번호 입력 모달 닫기 (X 버튼)
  closeModalBtn.onclick = () => {
    modal.style.display = 'none';
  };

  // 계좌번호 확인 버튼 클릭
  confirmBtn.onclick = () => {
    const accountNumber = accountInput.value.trim();
    if (accountNumber.length === 0) {
      alert("계좌번호를 입력해주세요.");
      return;
    }

    // 숫자만 남기고 하이픈 포맷 (예: 123-4567-89012)
    const formatted = accountNumber.replace(/[^0-9]/g, '').replace(/^(\d{3})(\d{4})(\d{5})$/, '$1-$2-$3');

    // 버튼 숨기고 계좌번호 표시
    openModalBtn.style.display = 'none';
    accountDisplay.textContent = formatted;
    accountDisplay.style.display = 'inline';

    modal.style.display = 'none';
  };

  // 은행 선택 모달 열기
  openBankModalBtn.onclick = () => {
    bankModal.style.display = 'flex';
  };

  // 은행 선택 모달 닫기 (X 버튼)
  closeBankModalBtn.onclick = () => {
    bankModal.style.display = 'none';
  };

  // 모달 외부 클릭 시 모달 닫기
  window.onclick = e => {
    if (e.target === bankModal) bankModal.style.display = 'none';
    if (e.target === modal) modal.style.display = 'none';
  };

  // 은행 버튼 클릭 이벤트 위임
  bankModal.querySelector('.bank-list').addEventListener('click', e => {
    const btn = e.target.closest('.bank-btn');
    if (!btn) return;

    const imgSrc = btn.querySelector('img').src;
    const altText = btn.querySelector('img').alt;

    bankModal.style.display = 'none';

    // 은행 선택 박스에 로고 표시 (클릭 시 다시 선택 모달 열림)
    bankSelectBox.innerHTML = `
      <img src="${imgSrc}" alt="${altText}" class="selected-bank-logo" title="${altText}" style="cursor:pointer;" />
    `;

    const selectedLogo = bankSelectBox.querySelector('.selected-bank-logo');
    selectedLogo.onclick = () => {
      bankModal.style.display = 'flex';
    };
  });

  // 계좌번호 표시 클릭 시 다시 입력 모달 열기
  accountDisplay.onclick = () => {
    accountDisplay.style.display = 'none';
    openModalBtn.style.display = 'inline';
    modal.style.display = 'flex';
    accountInput.value = '';
    accountInput.focus();
  };

  // 이체 금액 입력 포맷 및 버튼 활성화 제어 함수
  function formatAmount(input) {
    // 숫자만 추출
    let value = input.value.replace(/[^0-9]/g, '');
    // 3자리마다 콤마 삽입
    value = value.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    input.value = value;

    // 버튼 활성화 여부 체크 (예: 0보다 큰 경우만 활성화)
    const numericValue = parseInt(value.replace(/,/g, ''), 10);
    transferBtn.disabled = isNaN(numericValue) || numericValue <= 0;
  }
  
//이체 확인 모달 관련 요소 선택
  const confirmTransferModal = document.getElementById('confirmTransferModal');
  const closeConfirmModalBtn = confirmTransferModal.querySelector('.close');
  const confirmBank = document.getElementById('confirmBank');
  const confirmAccount = document.getElementById('confirmAccount');
  const confirmAmount = document.getElementById('confirmAmount');
  const finalTransferBtn = document.getElementById('finalTransferBtn');
  const cancelTransferBtn = document.getElementById('cancelTransferBtn');

  // 이체하기 버튼 클릭 시 이체 확인 모달 표시
  transferBtn.onclick = () => {
    const selectedBankLogo = document.querySelector('.selected-bank-logo');
    const bankName = selectedBankLogo ? selectedBankLogo.alt : "선택된 은행 없음";
    const accountNum = accountDisplay.textContent || "입력된 계좌 없음";
    const amount = transferAmountInput.value || "0";

    // 이체 정보 세팅
    confirmBank.textContent = `은행: ${bankName}`;
    confirmAccount.textContent = `계좌번호: ${accountNum}`;
    confirmAmount.textContent = `이체 금액: ${amount} 원`;

    confirmTransferModal.style.display = 'flex';
  };

  // 이체 확인 모달 닫기 (X 버튼 또는 취소 버튼)
  closeConfirmModalBtn.onclick = () => {
    confirmTransferModal.style.display = 'none';
  };
  cancelTransferBtn.onclick = () => {
    confirmTransferModal.style.display = 'none';
  };

  // 모달 외부 클릭 시 닫기
  window.addEventListener('click', e => {
    if (e.target === confirmTransferModal) {
      confirmTransferModal.style.display = 'none';
    }
  });

  // 최종 이체 버튼 클릭 시 실제 처리 (여기서는 alert로 예시)
  finalTransferBtn.onclick = () => {
    alert("이체가 완료되었습니다.");
    confirmTransferModal.style.display = 'none';

    // 실제 처리 로직 (예: 서버 전송 등)은 여기에 추가
  };

  </script>

</body>
</html>
