# Gateway 기본 설정
server.port=8201
spring.application.name=gateway-service

# Eureka 설정
eureka.client.service-url.defaultZone=http://localhost:8200/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Spring Cloud Gateway 라우팅 설정


# 1. 인증 관련 (Login Service) - 인증 불필요
# 수정된 인증 관련 라우팅
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://LOGIN-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/oauth2/**,/login/**,/auth/**,/login/oauth2/**

# 2. 정적 파일 라우팅 (인증 불필요)
spring.cloud.gateway.routes[1].id=static-resources
spring.cloud.gateway.routes[1].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/css/**,/js/**,/images/**,/favicon.ico


# 3. 메인 페이지 (Banking Service) - 인증 불필요 (JWT 체크는 클라이언트에서)
spring.cloud.gateway.routes[2].id=main-page
spring.cloud.gateway.routes[2].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/,/main,/index.html

# 4. Banking Service API 라우팅 - JWT 인증 필요
spring.cloud.gateway.routes[3].id=banking-api
spring.cloud.gateway.routes[3].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/**
spring.cloud.gateway.routes[3].filters[0]=JwtAuth

# 5. Banking Service 페이지 라우팅 - JWT 인증 필요
spring.cloud.gateway.routes[4].id=banking-pages
spring.cloud.gateway.routes[4].uri=lb://BANKING-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/banking/**,/account/**,/createAccount/**,/transfer/**,/safebox/**
spring.cloud.gateway.routes[4].filters[0]=JwtAuth

# 6. MyPage Service - JWT 인증 필요 (향후 추가)
spring.cloud.gateway.routes[5].id=mypage-service
spring.cloud.gateway.routes[5].uri=lb://MYPAGE-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/mypage/**
spring.cloud.gateway.routes[5].filters[0]=JwtAuth

# JWT 설정 (Login Service와 동일해야 함)
jwt.secret=myBankingSecretKey123456789012345678901234567890
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# CORS 설정 (필요시)
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:8201,http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

# 로그 설정 (디버깅용)
logging.level.com.oww.gateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# Gateway 타임아웃 설정
spring.cloud.gateway.httpclient.connect-timeout=3000
spring.cloud.gateway.httpclient.response-timeout=5s