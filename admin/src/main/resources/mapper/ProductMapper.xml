<!-- src/main/resources/mapper/PackageMapper.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.PackageMapper">

  <resultMap id="PackageViewMap" type="com.example.demo.vo.PackageVO">
    <id     property="packageNo" column="package_no"/>
    <result property="type"      column="type"/>
    <result property="discount"  column="discount"/>

    <result property="hall"      column="hall"/>
    <result property="studio"    column="studio"/>
    <result property="dress"     column="dress"/>
    <result property="makeup"    column="makeup"/>

    <result property="hallName"    column="hall_name"/>
    <result property="hallAddress" column="hall_address"/>
    <result property="hallCost"    column="hall_cost"/>
    <result property="hallImg"     column="hall_img"/>

    <result property="studioName"  column="studio_name"/>
    <result property="studioCost"  column="studio_cost"/>

    <result property="dressName"   column="dress_name"/>
    <result property="dressCost"   column="dress_cost"/>

    <result property="makeupName"  column="makeup_name"/>
    <result property="makeupCost"  column="makeup_cost"/>

    <result property="totalPrice"  column="total_price"/>
    <result property="finalPrice"  column="final_price"/>
  </resultMap>

  <sql id="joinCols">
    p.package_no, p.type, p.hall, p.studio, p.dress, p.makeup, p.discount,

    h.product_name AS hall_name,
    h.address      AS hall_address,
    h.cost         AS hall_cost,
    h.img          AS hall_img,

    s.product_name AS studio_name,
    s.cost         AS studio_cost,

    d.product_name AS dress_name,
    d.cost         AS dress_cost,

    m.product_name AS makeup_name,
    m.cost         AS makeup_cost,

    NVL(h.cost,0)+NVL(s.cost,0)+NVL(d.cost,0)+NVL(m.cost,0) AS total_price,
    NVL(h.cost,0)+NVL(s.cost,0)+NVL(d.cost,0)+NVL(m.cost,0) - NVL(p.discount,0) AS final_price
  </sql>

  <sql id="fromJoin">
    FROM package p
    LEFT JOIN product h ON h.product_no = p.hall
    LEFT JOIN product s ON s.product_no = p.studio
    LEFT JOIN product d ON d.product_no = p.dress
    LEFT JOIN product m ON m.product_no = p.makeup
  </sql>

  <!-- 목록 (검색:q는 상품명들에 LIKE, type 필터, 페이징) -->
  <select id="findAll" resultMap="PackageViewMap">
    SELECT <include refid="joinCols"/>
    <include refid="fromJoin"/>
    <where>
      <if test="type != null"> p.type = #{type} </if>
      <if test="q != null and q != ''">
        AND (
          LOWER(h.product_name) LIKE '%'||LOWER(#{q})||'%' OR
          LOWER(s.product_name) LIKE '%'||LOWER(#{q})||'%' OR
          LOWER(d.product_name) LIKE '%'||LOWER(#{q})||'%' OR
          LOWER(m.product_name) LIKE '%'||LOWER(#{q})||'%'
        )
      </if>
    </where>
    ORDER BY p.package_no DESC
    OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
  </select>

  <select id="count" resultType="int">
    SELECT COUNT(*) 
    <include refid="fromJoin"/>
    <where>
      <if test="type != null"> p.type = #{type} </if>
      <if test="q != null and q != ''">
        AND (
          LOWER(h.product_name) LIKE '%'||LOWER(#{q})||'%' OR
          LOWER(s.product_name) LIKE '%'||LOWER(#{q})||'%' OR
          LOWER(d.product_name) LIKE '%'||LOWER(#{q})||'%' OR
          LOWER(m.product_name) LIKE '%'||LOWER(#{q})||'%'
        )
      </if>
    </where>
  </select>

  <select id="findById" resultMap="PackageViewMap">
    SELECT <include refid="joinCols"/>
    <include refid="fromJoin"/>
    WHERE p.package_no = #{id}
  </select>

  <resultMap id="PackageMap" type="com.example.demo.vo.PackageVO">
    <id     property="packageNo" column="package_no"/>
    <result property="type"      column="type"/>
    <result property="hall"      column="hall"/>
    <result property="studio"    column="studio"/>
    <result property="dress"     column="dress"/>
    <result property="makeup"    column="makeup"/>
    <result property="discount"  column="discount"/>
  </resultMap>

  <insert id="insert" parameterType="com.example.demo.vo.PackageVO">
    INSERT INTO package (package_no, type, hall, studio, dress, makeup, discount)
    VALUES (#{packageNo}, #{type}, #{hall}, #{studio}, #{dress}, #{makeup}, #{discount})
  </insert>

  <update id="update" parameterType="com.example.demo.vo.PackageVO">
    UPDATE package
       SET type = #{type},
           hall = #{hall},
           studio = #{studio},
           dress = #{dress},
           makeup = #{makeup},
           discount = #{discount}
     WHERE package_no = #{packageNo}
  </update>

  <update id="updateDiscount">
    UPDATE package SET discount = #{discount}
     WHERE package_no = #{id}
  </update>

  <delete id="delete">
    DELETE FROM package WHERE package_no = #{id}
  </delete>

  <!-- 드롭다운: category는 varchar(20) -->
  <select id="findProductsByCategory" resultType="com.example.demo.vo.ProductVO">
    SELECT product_no   AS productNo,
           product_name AS productName,
           category, cost, address, img, description
      FROM product
     WHERE category = #{category}
     ORDER BY product_name
  </select>

</mapper>
